<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.market.post.mapper.PostMapper">
 	<select id="selectPostListTest" resultType="map">
 		SELECT
			*
		FROM
			`post`
 	</select>
 	<select id="selectPostList" parameterType="map" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			<if test="direction == 'next'">
				<![CDATA[
				`id` < #{standardId}
				]]>
			</if>
			<if test="direction == 'prev'">
				<![CDATA[
				`id` > #{standardId}
				]]>
			</if>
		ORDER BY `id` DESC
		LIMIT #{limit}
 	</select>
 	<insert id="insertPost" parameterType="com.market.post.domain.Post" useGeneratedKeys="true" keyProperty="id">
 		INSERT INTO `post`
 		(
			`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`createdAt`
			,`updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			, #{subject}
 			, #{price}
 			, #{address}
 			, #{content}
 			, NOW()
 			, NOW()
 		)
 	</insert>
 	<insert id="insertImage" parameterType="map">
 		INSERT INTO `image`
 		(
			`postId`
			,`imagePath`
			,`createdAt`
 		)
 		VALUES
 		(
 			#{postId}
 			, #{imagePath}
 			, NOW()
 		)
 	</insert>
 	<select id="selectImageByPostId" parameterType="int" resultType="com.market.post.domain.Image">
 		SELECT
 			`id`
			,`postId`
			,`imagePath`
			,`createdAt`
 		FROM `image`
 		WHERE
 			`postId` = #{postId}
 		ORDER BY `id` DESC
 		LIMIT 1
 	</select>
 	<select id="selectPostById" parameterType="int" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			`id` = #{id}
 	</select>
 	<select id="selectPostListOrderByCreatedAt" parameterType="map" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			<if test="direction == 'next'">
				<![CDATA[
				`id` < #{standardId}
				]]>
			</if>
			<if test="direction == 'prev'">
				<![CDATA[
				`id` > #{standardId}
				]]>
			</if>
		ORDER BY `createdAt` DESC
		LIMIT #{limit}
 	</select>
 	<select id="selectPostListOrderByAscendingOrderPrice" parameterType="map" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			<if test="direction == 'next'">
				<![CDATA[
				`id` < #{standardId}
				]]>
			</if>
			<if test="direction == 'prev'">
				<![CDATA[
				`id` > #{standardId}
				]]>
			</if>
		ORDER BY `price` ASC
		LIMIT #{limit}
 	</select>
 	<select id="selectPostListOrderByDescendingOrderPrice" parameterType="map" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			<if test="direction == 'next'">
				<![CDATA[
				`id` < #{standardId}
				]]>
			</if>
			<if test="direction == 'prev'">
				<![CDATA[
				`id` > #{standardId}
				]]>
			</if>
		ORDER BY `price` DESC
		LIMIT #{limit}
 	</select>
 	<update id="updateBuyerIdByPostId" parameterType="map">
 		UPDATE `post`
 		SET
 			`buyerId` = #{userId}
 			, `state` = '예약중'
 			, `updatedAt` = NOW()
 		WHERE
 			`id` = #{postId}
 	</update>
 	<update id="updateBuyerIdByUserId" parameterType="int">
 		UPDATE `post`
 		SET
 			`buyerId` = NULL
 			, `state` = '거래전'
 			, `updatedAt` = NOW()
 		WHERE
 			`buyerId` = #{userId}
 	</update>
 	<select id="selectPostListByUserId" parameterType="int" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			`userId` = #{userId}
 	</select>
 	<select id="selectRequestExchangePostListByUserId" parameterType="int" resultType="com.market.post.domain.Post">
 		SELECT
 			`id`
			,`userId`
			,`subject`
			,`price`
			,`address`
			,`content`
			,`state`
			,`buyerId`
			,`isEvaluated`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			`buyerId` = #{userId}
 	</select>
 	<delete id="deletePostById" parameterType="int">
 		DELETE FROM
 			`post`
 		WHERE
 			`id` = #{postId}
 	</delete>
 	<delete id="deleteImageByPostId" parameterType="int">
 		DELETE FROM
 			`image`
 		WHERE
 			`postId` = #{postId}
 	</delete>
 	<update id="updateIsEvaluatedByPostId" parameterType="int">
 		UPDATE `post`
 		SET
 			`isEvaluated` = TRUE
 			, `updatedAt` = NOW()
 		WHERE
 			`id` = #{postId}
 	</update>
 	<select id="selectPostIdAsSort" parameterType="String" resultType="int">
 		SELECT
 			`id`
 		FROM
 			`post`
 		ORDER BY `id` ${sort}
 		LIMIT 1
 	</select>
 </mapper>